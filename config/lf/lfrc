# vim:ft=conf
set drawbox true
set icons
set shell sh
set scrolloff 10
set preview
set previewer ~/.config/lf/preview.sh

# Use the `dim` attribute instead of underline for the cursor in the preview pane
set cursorpreviewfmt "\033[7;2m"

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) $OPENER $fx > /dev/null 2> /dev/null &;;
    esac
}}

%mkdir -p ~/.cache/trash
cmd trash %set -f; mv $fx ~/.cache/trash

cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd on-select &{{
    lf -remote "send $id set statfmt \"$(eza -ld --color=always "$f")\""
}}

cmd on-cd &{{
    # display repository status in your prompt
    if [ -d .git ] || [ -f .git ]; then
        branch=$(git branch --show-current 2>/dev/null) || true
        remote=$(git config --get branch.$branch.remote 2>/dev/null) || true
        url=$(git remote get-url $remote 2>/dev/null) || true
        fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m [GIT BRANCH:> $branch >> $url]\033[0m"
    elif [ -d .hg ]; then
        hg=$(hg branch 2>/dev/null) || true
        fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m [HG BRANCH:> $hg]\033[0m"
    elif [ -d .svn ]; then
        svn=$(svn info 2>/dev/null | awk '/^URL: /{print $2}') || true
        fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m [SVN URL:> $svn]\033[0m"
    else
        fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%d\033[0m\033[1m%f\033[0m"
    fi
    lf -remote "send $id set promptfmt \"$fmt\""
    printf "\033]0; $(pwd | sed "s|$HOME|~|") - lf î˜¦\007" > /dev/tty
}}

map <enter> shell
map ` !true
map x $$f
map X !$f
map o &$OPENER $fx
map a :push %mkdir<space>
map <delete> trash
map <s-delete> delete
map <insert> :push %touch<space>
map <tab> $lazygit

on-cd

${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $w -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}
